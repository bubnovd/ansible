- name: Deploy nginx
  hosts: nginx
  roles: 
    - geerlingguy.nginx
  tags:
    - nginx

- name: Install python-certbot-nginx
  hosts: nginx
  tasks:
    - package:
        name: python-certbot-nginx
        state: present

- name: Deploy certbot
  hosts: nginx
  roles:
    - geerlingguy.certbot
  tags:
    - nginx
    - certbot

- name: Deploy node exporter
  hosts: node_exporter
  roles:
    - ansible-node-exporter
  tags:
    - node-exporter

- name: Deploy prometheus
  hosts: prometheus
  roles:
    - ansible-prometheus
  tags:
    - prometheus
    - monitoring

- name: Deploy mikrotik-exporter
  hosts: mikrotik_exporter
  roles:
    - ansible-mikrotik-exporter
  tags:
    - monitoring
    - mikrotik-exporter    

- name: Deploy blackbox-exporter
  hosts: blackbox_exporter 
  roles:
    - ansible-blackbox-exporter
  tags:
    - monitoring
    - blackbox-exporter
 
- name: Make and copy certs
  hosts: grafana
  tasks:
#    - file:
#        path: "{{ item }}"
#        state: directory
#        mode: '0755'
#      delegate_to: localhost
#      loop:
#        - "{{ cert_crt_path }}"
#        - "{{ cert_key_path }}"
#        - "{{ cert_csr_path }}"

    - openssl_privatekey:
        path: "{{ cert_key_path }}{{ grafana_domain }}.pem"
      delegate_to: localhost
    
    - openssl_csr:
        path: "{{ cert_csr_path }}{{ grafana_domain }}.csr"
        privatekey_path: "{{ cert_key_path }}{{ grafana_domain }}.pem"
        common_name: "{{ grafana_domain }}"
      delegate_to: localhost
    
    - openssl_certificate:
        path: "{{ cert_crt_path }}{{ grafana_domain }}.crt"
        privatekey_path: "{{ cert_key_path }}{{ grafana_domain }}.pem"
        csr_path: "{{ cert_csr_path }}{{ grafana_domain }}.csr"
        provider: selfsigned
      delegate_to: localhost

    - copy:
        src: "{{ item.src }}"
        dest: "{{ item.dst }}"
        #        owner: grafana
        #        group: grafana
        mode: '0666'
      loop:
        - { src: "{{ cert_crt_path }}{{ grafana_domain }}.crt", dst: "/tmp/{{ grafana_domain }}.crt" }
        - { src: "{{ cert_key_path }}{{ grafana_domain }}.pem", dst: "/tmp/{{ grafana_domain }}.pem" }
      become: true
  tags:
    - grafana
    - certs

- name: Deploy grafana
  hosts: grafana
  roles:
    - ansible-grafana
  tags:
    - grafana
    - monitoring
    - grafana_deploy

- name: Deploy Loki
  hosts: loki
  roles:
    - softasap.sa_loki_promtail
  tags:
    - loki
    - monitoring

- name: Configure promtail and RSyslog 
  hosts: loki 
  tasks:
    - blockinfile:
        path: "{{ loki_config_dir }}/config.yml"
        block: |2
              syslog: routers
                listen_address: 127.0.0.1:1514
                idle_timeout: 60s
                labels:
                  job: routers
              relabel_configs:
                - source_labels: ['__syslog_message_hostname']
                  target_label: 'host'
                - source_labels: ['__syslog_message_fromhostip']
                  target_label: 'ip'
                - source_labels: ['__syslog_message_severity']
                  target_label: 'level'
    - lineinfile:
        path: /etc/rsyslog.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: 'module\(load="imudp"\)', line: 'module(load="imudp")' }
        - { regexp: 'input\(type="imudp" port="514"\)', line: 'input(type="imudp" port="514")' }
    - lineinfile:
        path: /etc/rsyslog.conf
        insertbefore: '^auth,authpriv.*'
        line: 'local0.* action(type="omfwd" target="127.0.0.1" protocol="tcp" port="1514" Template="RSYSLOG_SyslogProtocol23Format" TCP_Framing="octet-counted")'
  become: yes
  tags:
    - loki
  

- name: Deploy alertmanager
  hosts: alertmanager
  roles:
    - ansible-alertmanager
  tags:
    - alertmanager
    - monitoring

      #- name: Deploy alertmanager telegram bot
      #  hosts: alertmanager-bot
      #  roles:
      #    - ansible-alertmanager-bot
      #  tags:
      #    - alertmanager-bot
      #    - monitoring 
      #
