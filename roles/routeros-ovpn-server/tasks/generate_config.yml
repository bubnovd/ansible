- name: "{{ item['name'] }}: create config directories"
  file:
    path: "/tmp/{{ item['name'] }}_OVPN.conf.d"
    state: directory
    mode: 0700

- name: "{{ item['name'] }}: download CA"
  command:  scp -P {{ ansible_ssh_port }} {{ansible_ssh_user}}@{{ansible_host}}:cert_export_{{ client_certs[0]['ros_cert_ca_name'] }}.crt \
    /tmp/{{ item['name'] }}_OVPN.conf.d/{{ inventory_hostname }}-CA.crt

- name: "{{ item['name'] }}: download certs"
  command: scp -P {{ ansible_ssh_port }} {{ansible_ssh_user}}@{{ansible_host}}:cert_export_{{ item['name'] }}.{{ ext }} \
    /tmp/{{ item['name'] }}_OVPN.conf.d/{{ inventory_hostname }}-{{ item['name'] }}.{{ ext }}
  loop:
    - crt
    - key
  loop_control:
    loop_var: ext

- name: "{{ item['name'] }}: clean certs"
  routeros_command:
    commands: 
      - "/file remove cert_export_{{ item['name'] }}.crt"
      - "/file remove cert_export_{{ item['name'] }}.key"

- name: "{{ item['name'] }}: generate .ovpn config"
  template:
    src: client.ovpn.j2
    dest: /tmp/{{ item['name'] }}_OVPN.conf.d/{{ inventory_hostname }}-{{ item['name'] }}.ovpn

- name: "{{ item['name'] }}: generate auth data"
  copy:
    dest: /tmp/{{ item['name'] }}_OVPN.conf.d/client1.txt
    content: |
      {{ item['name'] }}
      {{ item['password'] }}
